class e extends WeakMap{createDefaultValue;constructor(e){super(),this.createDefaultValue=e}get(e){return super.has(e)||super.set(e,this.createDefaultValue()),super.get(e)}}const t=(t,n)=>{const r=new e((()=>!1)),u=n(t());let s=n;const a=new e((()=>s(t())));if("bindingMounted"in u){const e=(e,t,...n)=>{const u=n[0],s=n[1];r.get(u)||(()=>{if(Array.isArray(s.value)){if(s.value.every((e=>e)))return!0}else if("nodes"in s.value){if(s.value.nodes)return!0}else if(s.value)return!0;return!1})()&&(r.set(u,!0),e(...n)),t&&t(...n)};delete u.bindingMounted,u.updated=()=>{},s=t=>{const r=n(t),u=r.bindingMounted;delete r.bindingMounted;const s=r.updated;return r.updated=(...t)=>e(u,s,...t),r}}for(const e in u)u[e]=(...t)=>{a.get(t[0])[e](...t)};return u};export{t as createSeparatedDirectives};
